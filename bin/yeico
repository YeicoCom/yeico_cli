#!/bin/bash

SCRIPT_PATH=$(dirname $BASH_SOURCE)
SCRIPT_PATH=$(realpath $SCRIPT_PATH)

ACTION=$1
APP_HOST=$2
APP_PATH=${3:-$(pwd)}
cd $APP_PATH
APP_PATH=$(pwd)
APP_NAME=$(basename $APP_PATH)
RSYNC_CONF=/tmp/.rsyncd.conf.$APP_NAME

panic() { 
    >&2 echo $1
    exit 1
}

build_app () {
    [ -f mix.exs ] || panic "Missing mix.exs"
    [ -d deps ] || MIX_ENV=prod mix deps.get  || panic "Deps get failure"
    MIX_ENV=prod mix release --overwrite --quiet  || panic "Release failure"
}

rsync_clean() {
    rm $RSYNC_CONF 2>/dev/null
    sudo killall rsync 2>/dev/null
}

rsync_app() {
    build_app
    rsync_clean
    trap "rsync_clean" EXIT
    RSYNC_PATH=$(realpath _build/prod/rel/$APP_NAME)
    echo "[$APP_NAME]" > $RSYNC_CONF
    echo "path=$RSYNC_PATH" >> $RSYNC_CONF
    sudo rsync --daemon --config=$RSYNC_CONF
    echo apps.sh $1 $APP_NAME | ssh -T root@$APP_HOST -R 873:127.0.0.1:873
}

command_app() {
    echo apps.sh $1 $APP_NAME | ssh -T root@$APP_HOST
}

case $ACTION in
    start)
    command_app start
    ;;
    stop)
    command_app stop
    ;;
    restart)
    command_app restart
    ;;
    install)
    rsync_app install
    ;;
    uninstall)
    command_app uninstall
    ;;
    upgrade)
    rsync_app upgrade
    ;;
    list)
    command_app list
    ;;
    pid)
    command_app pid
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|install|uninstall|upgrade|list|pid}"
    exit 1
    ;;
esac
